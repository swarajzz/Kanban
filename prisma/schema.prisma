// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id     String  @id @default(uuid())
  name   String
  email  String  
  boards Board[]
  tasks  Task[]
}

model Board {
  id        String   @id @default(uuid())
  name      String
  columns   Column[]
  createdBy User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
}

model Column {
  id      Int    @id @default(autoincrement())
  name    String
  tasks   Task[]
  board   Board  @relation(fields: [boardId], references: [id])
  boardId String
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  status      String
  subTasks    SubTask[]
  createdBy   User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  column      Column    @relation(fields: [columnId], references: [id])
  columnId    Int
  userId      String
}

model SubTask {
  id          Int      @id @default(autoincrement())
  title       String
  isCompleted Boolean
  tasks       Task    @relation(fields: [taskId], references: [id])
  taskId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
